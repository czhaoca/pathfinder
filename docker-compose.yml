# Pathfinder Docker Compose Configuration
version: '3.8'

services:
  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: pathfinder-backend
    restart: unless-stopped
    ports:
      - "${API_PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - API_PORT=${API_PORT:-3000}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    env_file:
      - .env
    volumes:
      # Oracle wallet files (mounted read-only)
      - ${ORACLE_WALLET_PATH}:/app/wallets:ro
      # Logs directory (persistent)
      - ./logs:/app/logs
    networks:
      - pathfinder-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "node", "src/utils/health-check.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Backend Development Server
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: pathfinder-backend-dev
    restart: unless-stopped
    ports:
      - "${API_PORT:-3000}:3000"
    environment:
      - NODE_ENV=development
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ${ORACLE_WALLET_PATH}:/app/wallets:ro
    networks:
      - pathfinder-network
    depends_on:
      - redis
    profiles:
      - development

  # Frontend Web Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pathfinder-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-5173}:80"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - REACT_APP_API_URL=http://backend:3000/api
    depends_on:
      - backend
    networks:
      - pathfinder-network
    profiles:
      - production

  # Frontend Development Server
  frontend-dev:
    image: node:22-alpine
    container_name: pathfinder-frontend-dev
    working_dir: /app
    command: npm run dev -- --host
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3000/api
    depends_on:
      - backend-dev
    networks:
      - pathfinder-network
    profiles:
      - development

  # Redis for session management and caching
  redis:
    image: redis:7-alpine
    container_name: pathfinder-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    networks:
      - pathfinder-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: pathfinder-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - pathfinder-network
    profiles:
      - nginx

networks:
  pathfinder-network:
    driver: bridge

volumes:
  redis-data:
    driver: local